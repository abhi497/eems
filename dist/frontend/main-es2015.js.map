{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.html","./src/app/file-upload/file-upload.component.html","./src/app/footer/footer.component.html","./src/app/header/header.component.html","./src/app/home/home.component.html","./src/app/login/login.component.html","./src/app/page-not-found/page-not-found.component.html","./src/app/preview/preview.component.html","./src/app/register/register.component.html","./node_modules/tslib/tslib.es6.js","./src/app/app-routing.module.ts","./src/app/app.component.scss","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/auth.guard.ts","./src/app/auth.service.ts","./src/app/data-share.service.ts","./src/app/file-upload/file-upload.component.scss","./src/app/file-upload/file-upload.component.ts","./src/app/filesInfo.ts","./src/app/footer/footer.component.scss","./src/app/footer/footer.component.ts","./src/app/header/header.component.scss","./src/app/header/header.component.ts","./src/app/home/home.component.scss","./src/app/home/home.component.ts","./src/app/login/login.component.scss","./src/app/login/login.component.ts","./src/app/page-not-found/page-not-found.component.scss","./src/app/page-not-found/page-not-found.component.ts","./src/app/preview/preview.component.scss","./src/app/preview/preview.component.ts","./src/app/register/register.component.scss","./src/app/register/register.component.ts","./src/app/student-registration.service.ts","./src/app/studentInfo.ts","./src/app/token-interceptor.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,wE;;;;;;;;;;;;ACZA;AAAe,sJ;;;;;;;;;;;;ACAf;AAAe,iqF;;;;;;;;;;;;ACAf;AAAe,oO;;;;;;;;;;;;ACAf;AAAe,gsC;;;;;;;;;;;;ACAf;AAAe,2qrBAA4mrB,sBAAsB,GAAG,sBAAsB,osDAAosD,mBAAmB,KAAK,mBAAmB,SAAS,uBAAuB,isD;;;;;;;;;;;;ACAz7uB;AAAe,8nD;;;;;;;;;;;;ACAf;AAAe,+F;;;;;;;;;;;;ACAf;AAAe,srCAAunC,mBAAmB,0PAA0P,mBAAmB,gRAAgR,mBAAmB,8XAA8X,yBAAyB,0RAA0R,yBAAyB,kRAAkR,iBAAiB,0VAA0V,oBAAoB,wRAAwR,yBAAyB,4QAA4Q,mBAAmB,qXAAqX,qBAAqB,8WAA8W,kBAAkB,4QAA4Q,mBAAmB,gRAAgR,qBAAqB,sqCAAsqC,2BAA2B,kkBAAkkB,qBAAqB,8kBAA8kB,uBAAuB,4jBAA4jB,oBAAoB,gmBAAgmB,0BAA0B,mtBAAmtB,2BAA2B,kkBAAkkB,qBAAqB,8kBAA8kB,uBAAuB,4jBAA4jB,oBAAoB,gmBAAgmB,0BAA0B,qhBAAqhB,sBAAsB,gRAAgR,oBAAoB,gRAAgR,oBAAoB,2XAA2X,wBAAwB,uRAAuR,wBAAwB,k5B;;;;;;;;;;;;ACAl7a;AAAe,sWAAuS,OAAO,ikG;;;;;;;;;;;;ACA7T;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA,+DAA+D;AAC/D;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;;AAEO;AACP;AACA,mBAAmB,sBAAsB;AACzC;AACA;;AAEO;AACP;AACA,gDAAgD,OAAO;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA,4DAA4D,cAAc;AAC1E;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;;AAEO;AACP,mCAAmC,oCAAoC;AACvE;;AAEO;AACP;AACA;;AAEO;AACP,2BAA2B,+DAA+D,gBAAgB,EAAE,EAAE;AAC9G;AACA,mCAAmC,MAAM,6BAA6B,EAAE,YAAY,WAAW,EAAE;AACjG,kCAAkC,MAAM,iCAAiC,EAAE,YAAY,WAAW,EAAE;AACpG,+BAA+B,qFAAqF;AACpH;AACA,KAAK;AACL;;AAEO;AACP,aAAa,6BAA6B,0BAA0B,aAAa,EAAE,qBAAqB;AACxG,gBAAgB,qDAAqD,oEAAoE,aAAa,EAAE;AACxJ,sBAAsB,sBAAsB,qBAAqB,GAAG;AACpE;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC,kCAAkC,SAAS;AAC3C,kCAAkC,WAAW,UAAU;AACvD,yCAAyC,cAAc;AACvD;AACA,6GAA6G,OAAO,UAAU;AAC9H,gFAAgF,iBAAiB,OAAO;AACxG,wDAAwD,gBAAgB,QAAQ,OAAO;AACvF,8CAA8C,gBAAgB,gBAAgB,OAAO;AACrF;AACA,iCAAiC;AACjC;AACA;AACA,SAAS,YAAY,aAAa,OAAO,EAAE,UAAU,WAAW;AAChE,mCAAmC,SAAS;AAC5C;AACA;;AAEO;AACP;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,MAAM,gBAAgB;AACzC;AACA;AACA;AACA;AACA,iBAAiB,sBAAsB;AACvC;AACA;AACA;;AAEO;AACP,4BAA4B,sBAAsB;AAClD;AACA;AACA;;AAEO;AACP,iDAAiD,QAAQ;AACzD,wCAAwC,QAAQ;AAChD,wDAAwD,QAAQ;AAChE;AACA;AACA;;AAEO;AACP;AACA;;AAEO;AACP;AACA;AACA,iBAAiB,sFAAsF,aAAa,EAAE;AACtH,sBAAsB,gCAAgC,qCAAqC,0CAA0C,EAAE,EAAE,GAAG;AAC5I,2BAA2B,MAAM,eAAe,EAAE,YAAY,oBAAoB,EAAE;AACpF,sBAAsB,oGAAoG;AAC1H,6BAA6B,uBAAuB;AACpD,4BAA4B,wBAAwB;AACpD,2BAA2B,yDAAyD;AACpF;;AAEO;AACP;AACA,iBAAiB,4CAA4C,SAAS,EAAE,qDAAqD,aAAa,EAAE;AAC5I,yBAAyB,6BAA6B,oBAAoB,gDAAgD,gBAAgB,EAAE,KAAK;AACjJ;;AAEO;AACP;AACA;AACA,2GAA2G,sFAAsF,aAAa,EAAE;AAChN,sBAAsB,8BAA8B,gDAAgD,uDAAuD,EAAE,EAAE,GAAG;AAClK,4CAA4C,sCAAsC,UAAU,oBAAoB,EAAE,EAAE,UAAU;AAC9H;;AAEO;AACP,gCAAgC,uCAAuC,aAAa,EAAE,EAAE,OAAO,kBAAkB;AACjH;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP,4CAA4C;AAC5C;;AAEO;AACP;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpNoD;AACG;AAC2B;AAChB;AACT;AACH;AACb;AACiC;AACX;AAG/D,MAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAE,EAAE,EAAE,UAAU,EAAE,WAAW,EAAE,SAAS,EAAE,MAAM,EAAE;IACxD,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,8EAAiB,EAAE;IAClD,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,qEAAc,EAAE;IAC5C,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,kEAAa,EAAE,WAAW,EAAE,CAAC,qDAAS,CAAC,EAAE;IACpE,EAAE,IAAI,EAAE,aAAa,EAAE,SAAS,EAAE,sFAAmB,EAAE;IACvD,EAAE,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,2EAAgB,EAAE;IAChD,EAAE,IAAI,EAAE,IAAI,EAAE,SAAS,EAAE,8FAAqB,EAAE;CACjD,CAAC;AAMF,IAAa,gBAAgB,GAA7B,MAAa,gBAAgB;CAAI;AAApB,gBAAgB;IAJ5B,8DAAQ,CAAC;QACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;KACxB,CAAC;GACW,gBAAgB,CAAI;AAAJ;AACtB,MAAM,gBAAgB,GAAG,CAAC,8EAAiB,EAAE,8FAAqB,EAAE,qEAAc,EAAE,kEAAa,CAAC,CAAC;;;;;;;;;;;;;AC1B1G;AAAe,6GAA8C,+H;;;;;;;;;;;;;;;;;ACAnB;AAO1C,IAAa,YAAY,GAAzB,MAAa,YAAY;IALzB;QAME,UAAK,GAAG,UAAU,CAAC;IACrB,CAAC;CAAA;AAFY,YAAY;IALxB,+DAAS,CAAC;QACT,QAAQ,EAAE,UAAU;QACpB,yMAAmC;;KAEpC,CAAC;GACW,YAAY,CAExB;AAFwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPiC;AACjB;AACI;AAC8B;AACD;AAC3B;AACa;AACA;AACf;AAC+B;AACnC;AAC6B;AACI;AACX;AA0B/D,IAAa,SAAS,GAAtB,MAAa,SAAS;CAAI;AAAb,SAAS;IAvBrB,8DAAQ,CAAC;QACR,YAAY,EAAE;YACZ,2DAAY;YACZ,wEAAe;YACf,wEAAe;YACf,oEAAgB;YAChB,uFAAmB;YACnB,4EAAgB;SACjB;QACD,OAAO,EAAE;YACP,uEAAa;YACb,oEAAgB;YAChB,0DAAW;YACX,qEAAgB;SACjB;QACD,SAAS,EAAE,CAAC,yDAAW,EAAE,yFAA0B,EAAE,sDAAS;YAC9D;gBACE,OAAO,EAAE,sEAAiB;gBAC1B,QAAQ,EAAE,mFAAuB;gBACjC,KAAK,EAAE,IAAI;aACZ,CAAC;QACF,SAAS,EAAE,CAAC,2DAAY,CAAC;KAC1B,CAAC;GACW,SAAS,CAAI;AAAJ;;;;;;;;;;;;;;;;;;;;ACvCqB;AAC+G;AAC7G;AAM7C,IAAa,SAAS,GAAtB,MAAa,SAAS;IAEpB,YAAoB,YAAyB,EACzB,OAAe;QADf,iBAAY,GAAZ,YAAY,CAAa;QACzB,YAAO,GAAP,OAAO,CAAQ;IAAE,CAAC;IAErC,WAAW;QACT,IAAG,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,EAAC;YAC9B,OAAO,IAAI;SACZ;aAAM;YACL,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;YACjC,OAAO,KAAK;SACb;IACH,CAAC;CAEH;;YAZmC,yDAAW;YAChB,sDAAM;;AAHxB,SAAS;IAHrB,gEAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;GACW,SAAS,CAcrB;AAdqB;;;;;;;;;;;;;;;;;;;;ACRqB;AACO;AACT;AAMzC,IAAa,WAAW,GAAxB,MAAa,WAAW;IAGtB,YAAoB,KAAkB,EAAU,OAAgB;QAA5C,UAAK,GAAL,KAAK,CAAa;QAAU,YAAO,GAAP,OAAO,CAAS;QAFxD,gBAAW,GAAG,4CAA4C,CAAC;QAC3D,aAAQ,GAAG,yCAAyC,CAAC;IACO,CAAC;IAErE,QAAQ,CAAC,IAAI;QACX,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAM,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;IACtD,CAAC;IAED,KAAK,CAAC,IAAI;QACR,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;IAC9C,CAAC;IAED,QAAQ;QACN,OAAO,CAAC,CAAC,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC;IACxC,CAAC;IAED,UAAU;QACR,YAAY,CAAC,UAAU,CAAC,OAAO,CAAC;QAChC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;IACnC,CAAC;IAED,QAAQ;QACN,OAAO,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;IACvC,CAAC;CAEF;;YAvB6B,+DAAU;YAAoB,sDAAM;;AAHrD,WAAW;IAHvB,gEAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;GACW,WAAW,CA0BvB;AA1BuB;;;;;;;;;;;;;;;;;;;;;ACRmB;AACJ;AACC;AAEI;AAK5C,IAAa,gBAAgB,GAA7B,MAAa,gBAAgB;IAQ3B;QANQ,YAAO,GAAG,IAAI,oDAAe,CAAC,IAAI,wDAAW,EAAE,CAAC,CAAC;QACjD,aAAQ,GAAG,IAAI,oDAAe,CAAC,IAAI,oDAAS,EAAE,CAAC,CAAC;QAExD,iBAAY,GAAG,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE,CAAC;QAC3C,iBAAY,GAAG,IAAI,CAAC,QAAQ,CAAC,YAAY,EAAE,CAAC;IAE5B,CAAC;IAEjB,cAAc,CAAC,WAAW;QACxB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IACjC,CAAC;IAED,cAAc,CAAC,YAAY;QACzB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;IACnC,CAAC;CACF;AAjBY,gBAAgB;IAH5B,gEAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;GACW,gBAAgB,CAiB5B;AAjB4B;;;;;;;;;;;;;ACT7B;AAAe,6GAA8C,2J;;;;;;;;;;;;;;;;;;;;ACAX;AACA;AACT;AACgB;AAOzD,IAAa,mBAAmB,GAAhC,MAAa,mBAAmB;IAE9B,YAAoB,KAAiB,EAAU,MAAc,EAAU,WAA6B;QAAhF,UAAK,GAAL,KAAK,CAAY;QAAU,WAAM,GAAN,MAAM,CAAQ;QAAU,gBAAW,GAAX,WAAW,CAAkB;QAMpG,UAAK,GAAQ,EAAE,CAAC;QAEhB,eAAU,GAAQ,EAAE;QAEpB,iDAAiD;QAEjD,iBAAY,GAAS,IAAI;IAZ+E,CAAC;IAEzG,QAAQ;QACN,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;IAC3E,CAAC;IAUD,QAAQ;QACN,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;IAClC,CAAC;IAED,OAAO,CAAC,KAAK;QACX,IAAI,CAAC,YAAY,GAAS,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QAChD,MAAM,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC;QAC3B,MAAM,SAAS,GAAG,QAAQ,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;QACjD,SAAS,CAAC,SAAS,GAAG,WAAW,CAAC;QAClC,SAAS,CAAC,WAAW,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC;QAC/C,KAAK,CAAC,UAAU,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;QACnC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAC/B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;QACpC,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC;QACnD,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QACnC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC;IACzB,CAAC;IAED,UAAU;QACR,OAAO,CAAC,GAAG,CAAC,SAAS,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;QACnC,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC5C,KAAI,MAAM,IAAI,IAAI,IAAI,CAAC,KAAK,EAAE;YAC5B,MAAM,EAAE,GAAG,IAAI,QAAQ,EAAE,CAAC;YAC1B,EAAE,CAAC,MAAM,CAAC,MAAM,EAAG,IAAI,CAAC,CAAC;YACzB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,+CAA+C,EAAE,EAAE,CAAC;iBACnE,SAAS,CACR,GAAG,CAAC,EAAE,GAAG,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAC,CAAC,EAC3B,GAAG,CAAC,EAAE,GAAG,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAC,CAAC,CAC5B;SACF;QACD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;IACrC,CAAC;CAEF;;YA/C4B,+DAAU;YAAkB,sDAAM;YAAuB,oEAAgB;;AAFzF,mBAAmB;IAL/B,+DAAS,CAAC;QACT,QAAQ,EAAE,iBAAiB;QAC3B,qOAA2C;;KAE5C,CAAC;GACW,mBAAmB,CAiD/B;AAjD+B;;;;;;;;;;;;;;;;;ACVzB,MAAM,SAAS;CAIrB;;;;;;;;;;;;;ACJD;AAAe,6GAA8C,+I;;;;;;;;;;;;;;;;;ACAX;AAOlD,IAAa,eAAe,GAA5B,MAAa,eAAe;IAE1B,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;CAEF;AAPY,eAAe;IAL3B,+DAAS,CAAC;QACT,QAAQ,EAAE,YAAY;QACtB,sNAAsC;;KAEvC,CAAC;GACW,eAAe,CAO3B;AAP2B;;;;;;;;;;;;;ACP5B;AAAe,6GAA8C,+I;;;;;;;;;;;;;;;;;;ACAX;AACJ;AAO9C,IAAa,eAAe,GAA5B,MAAa,eAAe;IAE1B,YAAoB,YAAyB;QAAzB,iBAAY,GAAZ,YAAY,CAAa;IAAI,CAAC;IAElD,QAAQ;IACR,CAAC;CAEF;;YALmC,yDAAW;;AAFlC,eAAe;IAL3B,+DAAS,CAAC;QACT,QAAQ,EAAE,YAAY;QACtB,sNAAsC;;KAEvC,CAAC;GACW,eAAe,CAO3B;AAP2B;;;;;;;;;;;;;ACR5B;AAAe,6GAA8C,uI;;;;;;;;;;;;;;;;;;;;;ACAX;AAC2B;AAE3B;AACT;AACgB;AAOzD,IAAa,aAAa,GAA1B,MAAa,aAAa;IAwCxB,YAAoB,kBAA8C,EAAU,KAAiB,EAAU,MAAc,EAAU,WAA6B;QAAxI,uBAAkB,GAAlB,kBAAkB,CAA4B;QAAU,UAAK,GAAL,KAAK,CAAY;QAAU,WAAM,GAAN,MAAM,CAAQ;QAAU,gBAAW,GAAX,WAAW,CAAkB;QArC5J,mBAAc,GAAG;YACf,KAAK,EAAE,EAAE;YACT,KAAK,EAAE,EAAE;YACT,KAAK,EAAE,EAAE;YACT,WAAW,EAAE,EAAE;YACf,WAAW,EAAE,EAAE;YACf,GAAG,EAAE,EAAE;YACP,MAAM,EAAE,EAAE;YACV,WAAW,EAAE,EAAE;YACf,KAAK,EAAE,EAAE;YACT,OAAO,EAAE,EAAE;YACX,IAAI,EAAE,EAAE;YACR,KAAK,EAAE,EAAE;YACT,OAAO,EAAE,EAAE;YACX,aAAa,EAAE,EAAE;YACjB,OAAO,EAAE,EAAE;YACX,SAAS,EAAE,EAAE;YACb,MAAM,EAAE,EAAE;YACV,YAAY,EAAE,EAAE;YAChB,aAAa,EAAE,EAAE;YACjB,OAAO,EAAE,EAAE;YACX,SAAS,EAAE,EAAE;YACb,MAAM,EAAE,EAAE;YACV,YAAY,EAAE,EAAE;YAChB,QAAQ,EAAE,EAAE;YACZ,MAAM,EAAE,EAAE;YACV,MAAM,EAAE,EAAE;YACV,UAAU,EAAE,EAAE;YACd,UAAU,EAAE,EAAE;SACf;QAED,kBAAa,GAAQ,EAAE;QAEvB,gBAAW,GAAQ,EAAE,CAAC;QAEtB,YAAO,GAAQ,EAAE;QAYjB,iBAAY,GAAS,IAAI;IAVuI,CAAC;IAEjK,QAAQ;QACN,IAAI,CAAC,SAAS,EAAE,CAAC;QACjB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAC1B,uFAAuF;QACvF,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,SAAS,CAAC,OAAO,CAAC,EAAE,CAAC,IAAI,CAAC,WAAW,GAAG,OAAO,CAAC,CAAC;QAC/E,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC,CAAC;IAC/E,CAAC;IAID,QAAQ;QACN,IAAI,OAAO,CAAC,yBAAyB,CAAC,EAAE;YACtC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;SACxC;aAAM;YACL,OAAO;SACR;IACH,CAAC;IAED,OAAO,CAAC,KAAK;QACX,IAAI,CAAC,YAAY,GAAS,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QAChD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAC/B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;IACtC,CAAC;IAED,mBAAmB;QACjB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;QACjC,6BAA6B;QAC7B,+DAA+D;QAC/D,0DAA0D;QAC1D,cAAc;QACd,iCAAiC;QACjC,gCAAgC;QAChC,IAAI;QAEJ,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,IAAI,CAAC,cAAc,CAAC;QAEpD,IAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC,IAAI,CAAC,cAAc,CAAC;aACpD,SAAS,CACR,CAAC,GAAG,EAAE,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EACzB,CAAC,GAAG,EAAE,EAAE;YACN,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACjB,KAAK,CAAC,0CAA0C,CAAC,CAAC;QACpD,CAAC,CAEF;IACL,CAAC;IAED,SAAS;QACP,IAAI,CAAC,kBAAkB,CAAC,aAAa,EAAE;aACtC,SAAS,CACR,GAAG,CAAC,EAAE;YAAG,IAAI,CAAC,OAAO,GAAG,GAAe,CAAC;YAC5B,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,EACX,GAAG,CAAC,EAAE,GAAG,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,GAAC,CAC3B;IACH,CAAC;CAEF;;YA3DyC,wFAA0B;YAAiB,+DAAU;YAAkB,sDAAM;YAAuB,oEAAgB;;AAxCjJ,aAAa;IALzB,+DAAS,CAAC;QACT,QAAQ,EAAE,UAAU;QACpB,gNAAoC;;KAErC,CAAC;GACW,aAAa,CAmGzB;AAnGyB;;;;;;;;;;;;;ACZ1B;AAAe,6GAA8C,2I;;;;;;;;;;;;;;;;;;;ACAX;AACJ;AACL;AAOzC,IAAa,cAAc,GAA3B,MAAa,cAAc;IAOzB,YAAoB,KAAkB,EAAU,OAAe;QAA3C,UAAK,GAAL,KAAK,CAAa;QAAU,YAAO,GAAP,OAAO,CAAQ;QAL/D,kBAAa,GAAG;YACd,KAAK,EAAE,EAAE;YACT,QAAQ,EAAE,EAAE;SACb;IAEkE,CAAC;IAEpE,QAAQ;IACR,CAAC;IAED,SAAS;QACP,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,aAAa,CAAC;aACnC,SAAS,CACR,GAAG,CAAC,EAAE;YACE,YAAY,CAAC,OAAO,CAAC,OAAO,EAAE,GAAG,CAAC,KAAK,CAAC,CAAC;YACzC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC;YAClB,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;QAAC,CAAC,EACxC,GAAG,CAAC,EAAE,GAAG,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAC,CAAC,CAC5B;IACH,CAAC;CAEF;;YAhB4B,yDAAW;YAAmB,sDAAM;;AAPpD,cAAc;IAL1B,+DAAS,CAAC;QACT,QAAQ,EAAE,WAAW;QACrB,mNAAqC;;KAEtC,CAAC;GACW,cAAc,CAuB1B;AAvB0B;;;;;;;;;;;;;ACT3B;AAAe,6GAA8C,mK;;;;;;;;;;;;;;;;;ACAX;AAOlD,IAAa,qBAAqB,GAAlC,MAAa,qBAAqB;IAEhC,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;CAEF;AAPY,qBAAqB;IALjC,+DAAS,CAAC;QACT,QAAQ,EAAE,oBAAoB;QAC9B,8OAA8C;;KAE/C,CAAC;GACW,qBAAqB,CAOjC;AAPiC;;;;;;;;;;;;;ACPlC;AAAe,6GAA8C,+I;;;;;;;;;;;;;;;;;;ACAX;AACO;AAOzD,IAAa,gBAAgB,GAA7B,MAAa,gBAAgB;IAE3B,YAAoB,WAA6B;QAA7B,gBAAW,GAAX,WAAW,CAAkB;IAAI,CAAC;IAOtD,QAAQ;QACN,2EAA2E;QAC3E,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,SAAS,CAAC,OAAO,CAAC,EAAE,CAAC,IAAI,CAAC,WAAW,GAAG,OAAO,CAAC,CAAC;QAC/E,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QAC9B,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC,CAAC;QAC7E,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;IAClC,CAAC;IAED,eAAe;QACb,6GAA6G;QAC7G,8CAA8C;QAC9C,+DAA+D;QAC/D,8DAA8D;QAC9D,KAAI,MAAM,IAAI,IAAI,IAAI,CAAC,aAAa,EAAE;YACpC,IAAI,MAAM,GAAG,IAAI,UAAU,EAAE,CAAC;YAC9B,MAAM,CAAC,MAAM,GAAG,CAAC,UAAS,OAAO;gBAC/B,OAAO,UAAS,CAAC;oBACf,MAAM,IAAI,GAAG,QAAQ,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;oBAC5C,IAAI,CAAC,SAAS,GAAG,aAAa,CAAC,CAAC,MAAM,CAAC,MAAM,uCAAuC,CAAC;oBACrF,IAAG,IAAI,CAAC,SAAS,KAAK,OAAO,EAAE;wBAC7B,QAAQ,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;qBACpD;yBAAM,IAAI,IAAI,CAAC,SAAS,KAAK,WAAW,EAAE;wBACzC,QAAQ,CAAC,cAAc,CAAC,WAAW,CAAC,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;qBACxD;gBACH,CAAC;YACF,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;YACT,MAAM,CAAC,aAAa,CAAC,IAAI,CAAC;SAC5B;IACH,CAAC;IAED,KAAK;QACH,MAAM,CAAC,KAAK,EAAE,CAAC;IACjB,CAAC;CAEF;;YAzCkC,oEAAgB;;AAFtC,gBAAgB;IAL5B,+DAAS,CAAC;QACT,QAAQ,EAAE,aAAa;QACvB,yNAAuC;;KAExC,CAAC;GACW,gBAAgB,CA2C5B;AA3C4B;;;;;;;;;;;;;ACR7B;AAAe,6GAA8C,mJ;;;;;;;;;;;;;;;;;;;ACAX;AACJ;AAEL;AAOzC,IAAa,iBAAiB,GAA9B,MAAa,iBAAiB;IAa5B,YAAoB,KAAkB,EAAU,OAAe;QAA3C,UAAK,GAAL,KAAK,CAAa;QAAU,YAAO,GAAP,OAAO,CAAQ;QAX/D,UAAK,GAAG,MAAM,CAAC;QAEf,uBAAkB,GAAG;YACnB,IAAI,EAAE,EAAE;YACR,GAAG,EAAE,EAAE;YACP,KAAK,EAAE,EAAE;YACT,OAAO,EAAE,EAAE;YACX,QAAQ,EAAE,EAAE;YACZ,KAAK,EAAE,EAAE;SACT,CAAC;IAEgE,CAAC;IAEpE,QAAQ;IACR,CAAC;IAED,YAAY;QACV,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,kBAAkB,CAAC;aAC3C,SAAS,CACR,GAAG,CAAC,EAAE;YACJ,YAAY,CAAC,OAAO,CAAC,OAAO,EAAE,GAAG,CAAC,KAAK,CAAC,CAAC;YACzC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACjB,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;YACjC,IAAI,CAAC,kBAAkB,GAAG;gBACxB,IAAI,EAAE,EAAE;gBACR,GAAG,EAAE,EAAE;gBACP,KAAK,EAAE,EAAE;gBACT,OAAO,EAAE,EAAE;gBACX,QAAQ,EAAE,EAAE;gBACZ,KAAK,EAAE,EAAE;aACT,CAAC;QAAA,CAAC,EACN,GAAG,CAAC,EAAE,GAAE,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,GAAC,CAC1B;IACH,CAAC;CAEF;;YAxB4B,yDAAW;YAAmB,sDAAM;;AAbpD,iBAAiB;IAL7B,+DAAS,CAAC;QACT,QAAQ,EAAE,cAAc;QACxB,4NAAwC;;KAEzC,CAAC;GACW,iBAAiB,CAqC7B;AArC6B;;;;;;;;;;;;;;;;;;;ACVa;AACO;AAMlD,IAAa,0BAA0B,GAAvC,MAAa,0BAA0B;IAKrC,YAAoB,KAAiB;QAAjB,UAAK,GAAL,KAAK,CAAY;QAH7B,kBAAa,GAAG,wCAAwC,CAAC;QACzD,cAAS,GAAG,0CAA0C,CAAC;IAEtB,CAAC;IAE1C,UAAU,CAAC,OAAO;QAChB,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE,OAAO,CAAC,CAAC;IACtD,CAAC;IAED,aAAa;QACX,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IACxC,CAAC;CACF;;YAT4B,+DAAU;;AAL1B,0BAA0B;IAHtC,gEAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;GACW,0BAA0B,CActC;AAdsC;;;;;;;;;;;;;;;;;ACPhC,MAAM,WAAW;CA6BvB;;;;;;;;;;;;;;;;;;;AC7BoD;AAER;AAK7C,IAAa,uBAAuB,GAApC,MAAa,uBAAuB;IAElC,YAAoB,QAAkB;QAAlB,aAAQ,GAAR,QAAQ,CAAU;IAAI,CAAC;IAE3C,SAAS,CAAC,GAAG,EAAE,IAAI;QACjB,IAAI,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,yDAAW,CAAC;QAChD,IAAI,YAAY,GAAG,GAAG,CAAC,KAAK,CAAC;YAC3B,UAAU,EAAC;gBACT,aAAa,EAAE,UAAU,WAAW,CAAC,QAAQ,EAAE,EAAE;aAClD;SACF,CAAC;QACF,OAAO,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC;IAClC,CAAC;CACF;;YAX+B,sDAAQ;;AAF3B,uBAAuB;IAHnC,gEAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;GACW,uBAAuB,CAanC;AAbmC;;;;;;;;;;;;;ACPpC;AAAA;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;;;;;;;;ACfpB;AAC4B;AAE9B;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","export default \"<app-header></app-header>\\n<router-outlet></router-outlet>\\n<app-footer></app-footer>\"","export default \"<div class=\\\"common-format\\\">\\n    <div class=\\\"page-wrapper mt-3 mb-3\\\">\\n        <div class=\\\"container\\\">\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-md-10 offset-md-1\\\">\\n                    <div class=\\\"card\\\">\\n                        <div class=\\\"card-body\\\">\\n                            <form #uploadData=\\\"ngForm\\\" (ngSubmit)=\\\"uploadFile()\\\" action=\\\"\\\">\\n                                <h6 class=\\\"form-caption\\\">Documents</h6>\\n                                <hr>\\n                                <div class=\\\"form-row\\\">\\n                                    <div class=\\\"form-group col-md-4\\\">\\n                                        <label for=\\\"marksheet\\\">Marksheet</label>\\n                                        <div class=\\\"custom-input-file\\\">\\n                                            <input [(ngModel)]=\\\"fileUpload.marksheet\\\" type=\\\"file\\\" name=\\\"marksheet\\\" id=\\\"marksheet\\\" class=\\\"form-control\\\" (change)='getFile($event)' />\\n                                        </div>\\n                                    </div>\\n                                    <div class=\\\"form-group col-md-4\\\">\\n                                        <label for=\\\"photo\\\">Photo</label>\\n                                        <div class=\\\"custom-input-file\\\">\\n                                            <input [(ngModel)]=\\\"fileUpload.photo\\\" type=\\\"file\\\" name=\\\"photo\\\" id=\\\"photo\\\" class=\\\"form-control\\\" (change)='getFile($event)' />\\n                                        </div>\\n                                    </div>\\n                                    <div class=\\\"form-group col-md-4\\\">\\n                                        <label for=\\\"signature\\\">Signature</label>\\n                                        <div class=\\\"custom-input-file\\\">\\n                                            <input [(ngModel)]=\\\"fileUpload.signature\\\" type=\\\"file\\\" name=\\\"signature\\\" id=\\\"signature\\\" class=\\\"form-control\\\" (change)='getFile($event)' />\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"text-right mt-3\\\">\\n                                    <button type=\\\"submit\\\" class=\\\"btn btn-info\\\">Upload Files</button>\\n                                    <button (click)=\\\"prevPage()\\\" class=\\\"btn btn-secondary ml-2\\\">Back</button>\\n                                </div>\\n                            </form>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>                        \\n\"","export default \"<div class=\\\"footer-wrap bg-dark\\\">\\n    <div class=\\\"copyright-text text-center text-light\\\">\\n        <p class=\\\"mb-0\\\">Copyright@ EEMS</p>\\n    </div>\\n</div>\\n\"","export default \"<nav class=\\\"navbar navbar-expand-lg navbar-light bg-light\\\">\\n    <a class=\\\"navbar-brand\\\" href=\\\"#\\\">EEMS</a>\\n    <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\" aria-controls=\\\"navbarSupportedContent\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n      <span class=\\\"navbar-toggler-icon\\\"></span>\\n    </button>\\n  \\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\n      <ul class=\\\"navbar-nav ml-auto\\\">\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" *ngIf=\\\"!_authService.loggedIn()\\\" [routerLink]=\\\"['/login']\\\">Login</a>\\n        </li>\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" *ngIf=\\\"!_authService.loggedIn()\\\" [routerLink]=\\\"['/register']\\\">Registration</a>\\n        </li>\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" [routerLink]=\\\"['/home']\\\">Home</a>\\n        </li>\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" *ngIf=\\\"_authService.loggedIn()\\\" (click)=\\\"_authService.logoutUser()\\\">Logout</a>\\n        </li>\\n      </ul>\\n    </div>\\n  </nav>\"","export default \"<div class=\\\"common-format\\\">\\n    <div class=\\\"page-wrapper mt-3 mb-3\\\">\\n        <div class=\\\"container\\\">\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-md-10 offset-md-1\\\">\\n                    <div class=\\\"card\\\">\\n                        <div class=\\\"card-header\\\">\\n                            <h4 class=\\\"card-title text-center\\\">Student Registration</h4>\\n                        </div>\\n                        <div class=\\\"card-body\\\">\\n                            \\n                            <form action=\\\"\\\" #studentRegForm=\\\"ngForm\\\" (ngSubmit)=\\\"studentRegistration()\\\" novalidate>\\n                                <h6 class=\\\"form-caption\\\">Personal Information</h6>\\n                                <hr>\\n                                <div class=\\\"form-row\\\">\\n                                    <div class=\\\"form-group col-md-4\\\">\\n                                        <label for=\\\"fname\\\" class=\\\"required-item\\\">First Name</label>\\n                                        <input #fname=\\\"ngModel\\\" [(ngModel)]=\\\"studentRegData.fname\\\" [class.is-invalid]=\\\"fname.invalid && fname.touched\\\" type=\\\"text\\\" name=\\\"fname\\\" id=\\\"fname\\\" class=\\\"form-control\\\" required/>\\n                                        <div [class.d-none]=\\\"fname.valid || fname.untouched\\\" class=\\\"invalid-feedback\\\">Please enter your first name</div>\\n                                    </div>\\n                                    <div class=\\\"form-group col-md-4\\\">\\n                                        <label for=\\\"mname\\\">Middle Name</label>\\n                                        <input #mname=\\\"ngModel\\\" [(ngModel)]=\\\"studentRegData.mname\\\" type=\\\"text\\\" name=\\\"mname\\\" id=\\\"mname\\\" class=\\\"form-control\\\" />\\n                                    </div>\\n                                    <div class=\\\"form-group col-md-4\\\">\\n                                        <label for=\\\"lname\\\" class=\\\"required-item\\\">Last Name</label>\\n                                        <input #lname=\\\"ngModel\\\" [class.is-invalid]=\\\"lname.invalid && lname.touched\\\" [(ngModel)]=\\\"studentRegData.lname\\\" type=\\\"text\\\" name=\\\"lname\\\" id=\\\"lname\\\" class=\\\"form-control\\\" required/>\\n                                        <div [class.d-none]=\\\"lname.valid || lname.untouched\\\" class=\\\"invalid-feedback\\\">Please enter your last name</div>\\n                                    </div>\\n                                </div>\\n\\n                                <div class=\\\"form-row\\\">\\n                                    <div class=\\\"form-group col-md-4\\\">\\n                                        <label for=\\\"fathersName\\\" class=\\\"required-item\\\">Father's Name</label>\\n                                        <input #fathersName=\\\"ngModel\\\" [class.is-invalid]=\\\"fathersName.invalid && fathersName.touched\\\" [(ngModel)]=\\\"studentRegData.fathersName\\\" type=\\\"text\\\" name=\\\"fathersName\\\" id=\\\"fathersName\\\" class=\\\"form-control\\\" required/>\\n                                        <div [class.d-none]=\\\"fathersName.valid || fathersName.untouched\\\" class=\\\"invalid-feedback\\\">Please enter your fathers name</div>\\n                                    </div>\\n                                    <div class=\\\"form-group col-md-4\\\">\\n                                        <label for=\\\"mothersName\\\" class=\\\"required-item\\\">Mother's Name</label>\\n                                        <input #mothersName=\\\"ngModel\\\" [class.is-invalid]=\\\"mothersName.invalid && mothersName.touched\\\" [(ngModel)]=\\\"studentRegData.mothersName\\\" type=\\\"text\\\" name=\\\"mothersName\\\" id=\\\"mothersName\\\" class=\\\"form-control\\\" required/>\\n                                        <div [class.d-none]=\\\"mothersName.valid || mothersName.untouched\\\" class=\\\"invalid-feedback\\\">Please enter your mothers name</div>\\n                                    </div>\\n                                    <div class=\\\"form-group col-md-4\\\">\\n                                        <label for=\\\"dob\\\" class=\\\"required-item\\\">Date Of Birth</label>\\n                                        <input #dob=\\\"ngModel\\\" [class.is-invalid]=\\\"dob.invalid && dob.touched\\\" [(ngModel)]=\\\"studentRegData.dob\\\" type=\\\"date\\\" name=\\\"dob\\\" id=\\\"dob\\\" class=\\\"form-control\\\" required/>\\n                                        <div [class.d-none]=\\\"dob.valid || dob.untouched\\\" class=\\\"invalid-feedback\\\">Please enter your date of birth</div>\\n                                    </div>\\n                                </div>\\n\\n                                <div class=\\\"form-row\\\">\\n                                    <div class=\\\"form-group col-md-4\\\">\\n                                        <label for=\\\"gender\\\">Gender</label>\\n                                        <div class=\\\"form-control border-0\\\">\\n                                            <div class=\\\"custom-control custom-radio  d-inline-block mr-2\\\">\\n                                                <input [(ngModel)]=\\\"studentRegData.gender\\\" type=\\\"radio\\\" class=\\\"custom-control-input\\\" name=\\\"gender\\\" id=\\\"male\\\" value=\\\"male\\\"/>\\n                                                <label for=\\\"male\\\" class=\\\"custom-control-label\\\">Male</label>\\n                                            </div>\\n                                            <div class=\\\"custom-control custom-radio d-inline-block mr-2\\\">\\n                                                <input [(ngModel)]=\\\"studentRegData.gender\\\" type=\\\"radio\\\"  class=\\\"custom-control-input\\\" name=\\\"gender\\\" id=\\\"female\\\" value=\\\"female\\\"/>\\n                                                <label for=\\\"female\\\" class=\\\"custom-control-label\\\">Female</label>\\n                                            </div>\\n                                            <div class=\\\"custom-control custom-radio  d-inline-block\\\">\\n                                                <input [(ngModel)]=\\\"studentRegData.gender\\\" type=\\\"radio\\\"  class=\\\"custom-control-input\\\" name=\\\"gender\\\" id=\\\"trans\\\" value=\\\"trans\\\"/>\\n                                                <label for=\\\"trans\\\" class=\\\"custom-control-label\\\">Trans</label>\\n                                            </div>\\n                                        </div>\\n                                    </div>\\n                                    <div class=\\\"form-group col-md-4\\\">\\n                                        <label for=\\\"nationality\\\" class=\\\"required-item\\\">Nationality</label>\\n                                        <select #nationality=\\\"ngModel\\\" [class.is-invalid]=\\\"nationality.invalid && nationality.touched\\\" [(ngModel)]=\\\"studentRegData.nationality\\\" name=\\\"nationality\\\" id=\\\"nationality\\\" class=\\\"form-control\\\" required>\\n                                            <option value=\\\"Select any Category\\\">Select any Category</option>\\n                                            <option value=\\\"Indian\\\">Indian</option>\\n                                            <option value=\\\"NRI\\\">NRI</option>\\n                                        </select>\\n                                        <div [class.d-none]=\\\"nationality.valid || nationality.untouched\\\" class=\\\"invalid-feedback\\\">Please select Nationality</div>\\n                                    </div>\\n                                    <div class=\\\"form-group col-md-4\\\">\\n                                        <label for=\\\"caste\\\" class=\\\"required-item\\\">Caste</label>\\n                                        <select #caste=\\\"ngModel\\\" [class.is-invalid]=\\\"caste.invalid && caste.touched\\\" [(ngModel)]=\\\"studentRegData.caste\\\" name=\\\"caste\\\" id=\\\"caste\\\" class=\\\"form-control\\\" required>\\n                                            <option value=\\\"Select any Category\\\">Select any Category</option>\\n                                            <option value=\\\"UR\\\">UR</option>\\n                                            <option value=\\\"OBC\\\">OBC</option>\\n                                            <option value=\\\"SC\\\">SC</option>\\n                                            <option value=\\\"ST\\\">ST</option>\\n                                        </select>\\n                                        <div [class.d-none]=\\\"caste.valid || caste.untouched\\\" class=\\\"invalid-feedback\\\">Please select your caste</div>\\n                                    </div>\\n                                </div>\\n\\n                                <div class=\\\"form-row\\\">\\n                                    <div class=\\\"form-group col-md-12\\\">\\n                                        <label for=\\\"address\\\" class=\\\"required-item\\\">Address</label>\\n                                        <input #address=\\\"ngModel\\\" [class.is-invalid]=\\\"address.invalid && address.touched\\\" [(ngModel)]=\\\"studentRegData.address\\\" type=\\\"text\\\" name=\\\"address\\\" id=\\\"address\\\" class=\\\"form-control\\\" required/>\\n                                        <div [class.d-none]=\\\"address.valid || address.untouched\\\" class=\\\"invalid-feedback\\\">Please enter your postal address</div>\\n                                    </div>\\n                                </div>\\n\\n                                <div class=\\\"form-row\\\">\\n                                    <div class=\\\"form-group col-md-4\\\">\\n                                        <label for=\\\"city\\\" class=\\\"required-item\\\">City</label>\\n                                        <input #city=\\\"ngModel\\\" [class.is-invalid]=\\\"city.invalid && city.touched\\\" [(ngModel)]=\\\"studentRegData.city\\\" type=\\\"text\\\" name=\\\"city\\\" id=\\\"city\\\" class=\\\"form-control\\\" required/>\\n                                        <div [class.d-none]=\\\"city.valid || city.untouched\\\" class=\\\"invalid-feedback\\\">Please enter your city</div>\\n                                    </div>\\n                                    <div class=\\\"form-group col-md-4\\\">\\n                                        <label for=\\\"state\\\" class=\\\"required-item\\\">State</label>\\n                                        <input #state=\\\"ngModel\\\" [class.is-invalid]=\\\"state.invalid && state.touched\\\" [(ngModel)]=\\\"studentRegData.state\\\" type=\\\"text\\\" name=\\\"state\\\" id=\\\"state\\\" class=\\\"form-control\\\" required/>\\n                                        <div [class.d-none]=\\\"state.valid || state.untouched\\\" class=\\\"invalid-feedback\\\">Please enter your state</div>\\n                                    </div>\\n                                    <div class=\\\"form-group col-md-4\\\">\\n                                        <label for=\\\"country\\\" class=\\\"required-item\\\">Country</label>\\n                                        <input #country=\\\"ngModel\\\" [class.is-invalid]=\\\"country.invalid && country.touched\\\" [(ngModel)]=\\\"studentRegData.country\\\" type=\\\"text\\\" name=\\\"country\\\" id=\\\"country\\\" class=\\\"form-control\\\" required/>\\n                                        <div [class.d-none]=\\\"country.valid || country.untouched\\\" class=\\\"invalid-feedback\\\">Please enter your country</div>\\n                                    </div>\\n                                </div>\\n\\n\\n                                <h6 class=\\\"form-caption\\\">Academic Information</h6>\\n                                <hr>\\n                                \\n                                <table class=\\\"table\\\">\\n                                    <thead>\\n                                        <tr>\\n                                            <th>Examination</th>\\n                                            <th>Board/University</th>\\n                                            <th>Subject</th>\\n                                            <th>Year</th>\\n                                            <th>Percentage/Grade</th>\\n                                        </tr>\\n                                    </thead>\\n                                    <tbody>\\n                                        <tr>\\n                                            <td>\\n                                                <div class=\\\"form-group\\\">\\n                                                    <label for=\\\"\\\">Senior Secondary</label>\\n                                                    <!-- <input #ssExam=\\\"ngModel\\\" [(ngModel)]=\\\"studentRegData.ssExamination\\\" type=\\\"text\\\" name=\\\"ss-examination\\\" id=\\\"ss-examination\\\" class=\\\"form-control\\\" level=\\\"ss\\\" value=\\\"Senior Secondary\\\" /> -->\\n                                                </div>\\n                                            </td>\\n                                            <td>\\n                                                <div class=\\\"form-group\\\">\\n                                                    <input #ssBoard=\\\"ngModel\\\" [class.is-invalid]=\\\"ssBoard.invalid && ssBoard.touched\\\" [(ngModel)]=\\\"studentRegData.ssBoard\\\" type=\\\"text\\\" name=\\\"ss-board\\\" id=\\\"ss-board\\\" level=\\\"ss\\\" class=\\\"form-control\\\" required/>\\n                                                </div>\\n                                            </td>\\n                                            <td>\\n                                                <div class=\\\"form-group\\\">\\n                                                    <input #ssSubject=\\\"ngModel\\\" [class.is-invalid]=\\\"ssSubject.invalid && ssSubject.touched\\\" [(ngModel)]=\\\"studentRegData.ssSubject\\\" type=\\\"text\\\" name=\\\"ss-subject\\\" id=\\\"ss-subject\\\" level=\\\"ss\\\" class=\\\"form-control\\\" required/>\\n                                                </div>\\n                                            </td>\\n                                            <td>\\n                                                <div class=\\\"form-group\\\">\\n                                                    <input #ssYear=\\\"ngModel\\\" [class.is-invalid]=\\\"ssYear.invalid && ssYear.touched\\\" [(ngModel)]=\\\"studentRegData.ssYear\\\" type=\\\"text\\\" name=\\\"ss-year\\\" id=\\\"ss-year\\\" level=\\\"ss\\\" class=\\\"form-control\\\" required/>\\n                                                </div>\\n                                            </td>\\n                                            <td>\\n                                                <div class=\\\"form-group\\\">\\n                                                    <input #ssPercentage=\\\"ngModel\\\" [class.is-invalid]=\\\"ssPercentage.invalid && ssPercentage.touched\\\" [(ngModel)]=\\\"studentRegData.ssPercentage\\\" type=\\\"text\\\" name=\\\"ss-percentage\\\" id=\\\"ss-percentage\\\" level=\\\"ss\\\" class=\\\"form-control\\\" required/>\\n                                                </div>\\n                                            </td>\\n                                        </tr>\\n                                        <tr>\\n                                            <td>\\n                                                <div class=\\\"form-group\\\">\\n                                                    <label for=\\\"\\\">Higher Secondary</label>\\n                                                    <!-- <input [(ngModel)]=\\\"studentRegData.hsExamination\\\" type=\\\"text\\\" name=\\\"hs-examination\\\" id=\\\"hs-examination\\\" class=\\\"form-control\\\" level=\\\"hs\\\" value=\\\"Higher Secondary\\\" /> -->\\n                                                </div>\\n                                            </td>\\n                                            <td>\\n                                                <div class=\\\"form-group\\\">\\n                                                    <input #hsBoard=\\\"ngModel\\\" [class.is-invalid]=\\\"hsBoard.invalid && hsBoard.touched\\\" [(ngModel)]=\\\"studentRegData.hsBoard\\\" type=\\\"text\\\" name=\\\"hs-board\\\" id=\\\"hs-board\\\" level=\\\"hs\\\" class=\\\"form-control\\\" required/>\\n                                                </div>\\n                                            </td>\\n                                            <td>\\n                                                <div class=\\\"form-group\\\">\\n                                                    <input #hsSubject=\\\"ngModel\\\" [class.is-invalid]=\\\"hsSubject.invalid && hsSubject.touched\\\" [(ngModel)]=\\\"studentRegData.hsSubject\\\" type=\\\"text\\\" name=\\\"hs-subject\\\" id=\\\"hs-subject\\\" level=\\\"hs\\\" class=\\\"form-control\\\" required/>\\n                                                </div>\\n                                            </td>\\n                                            <td>\\n                                                <div class=\\\"form-group\\\">\\n                                                    <input #hsYear=\\\"ngModel\\\" [class.is-invalid]=\\\"hsYear.invalid && hsYear.touched\\\" [(ngModel)]=\\\"studentRegData.hsYear\\\" type=\\\"text\\\" name=\\\"hs-year\\\" id=\\\"hs-year\\\" level=\\\"hs\\\" class=\\\"form-control\\\" required/>\\n                                                </div>\\n                                            </td>\\n                                            <td>\\n                                                <div class=\\\"form-group\\\">\\n                                                    <input #hsPercentage=\\\"ngModel\\\" [class.is-invalid]=\\\"hsPercentage.invalid && hsPercentage.touched\\\" [(ngModel)]=\\\"studentRegData.hsPercentage\\\" type=\\\"text\\\" name=\\\"hs-percentage\\\" id=\\\"hs-percentage\\\" level=\\\"hs\\\" class=\\\"form-control\\\" required/>\\n                                                </div>\\n                                            </td>\\n                                        </tr>\\n                                    </tbody>\\n                                </table>\\n\\n                                <div class=\\\"form-row\\\">\\n                                    <div class=\\\"form-group col-md-4\\\">\\n                                        <label for=\\\"applyFor\\\" class=\\\"required-item\\\">Apply For</label>\\n                                        <select #applyFor=\\\"ngModel\\\" [class.is-invalid]=\\\"applyFor.invalid && applyFor.touched\\\" [(ngModel)]=\\\"studentRegData.applyFor\\\" name=\\\"applyFor\\\" id=\\\"applyFor\\\" class=\\\"form-control\\\" required>\\n                                            <option value=\\\"Select any one course\\\">Select any one course</option>\\n                                            <option value=\\\"BA\\\">BA</option>\\n                                            <option value=\\\"BBA\\\">BBA</option>\\n                                            <option value=\\\"BCA\\\">BCA</option>\\n                                            <option value=\\\"BSC\\\">BSC</option>\\n                                            <option value=\\\"MA\\\">MA</option>\\n                                            <option value=\\\"MBA\\\">MBA</option>\\n                                            <option value=\\\"MCA\\\">MCA</option>\\n                                            <option value=\\\"MSC\\\">MSC</option>\\n                                        </select>\\n                                        <div [class.d-none]=\\\"applyFor.valid || applyFor.untouched\\\" class=\\\"invalid-feedback\\\">Please select course</div>\\n                                    </div>\\n\\n                                    <div class=\\\"form-group col-md-4\\\">\\n                                        <label for=\\\"stream\\\" class=\\\"required-item\\\">Stream</label>\\n                                        <select #stream=\\\"ngModel\\\" [class.is-invalid]=\\\"stream.invalid && stream.touched\\\" [(ngModel)]=\\\"studentRegData.stream\\\" name=\\\"stream\\\" id=\\\"stream\\\" class=\\\"form-control\\\" required>\\n                                            <option value=\\\"Select any one stream\\\">Select any one stream</option>\\n                                            <option value=\\\"Computer\\\">Computer</option>\\n                                            <option value=\\\"Maths\\\">Maths</option>\\n                                            <option value=\\\"Biotech\\\">Biotech</option>\\n                                            <option value=\\\"Physics\\\">Physics</option>\\n                                        </select>\\n                                        <div [class.d-none]=\\\"stream.valid || stream.untouched\\\" class=\\\"invalid-feedback\\\">Please select any stream</div>\\n                                    </div>\\n\\n                                    <div class=\\\"form-group col-md-4\\\">\\n                                        <label for=\\\"medium\\\" class=\\\"required-item\\\">Medium</label>\\n                                        <select #medium=\\\"ngModel\\\" [class.is-invalid]=\\\"medium.invalid && medium.touched\\\" [(ngModel)]=\\\"studentRegData.medium\\\" name=\\\"medium\\\" id=\\\"medium\\\" class=\\\"form-control\\\" required>\\n                                            <option value=\\\"Select any one medium\\\">Select any one stream</option>\\n                                            <option value=\\\"English\\\">English</option>\\n                                            <option value=\\\"Hindi\\\">Hindi</option>\\n                                        </select>\\n                                        <div [class.d-none]=\\\"medium.valid || medium.untouched\\\" class=\\\"invalid-feedback\\\">Please select any medium</div>\\n                                    </div>\\n                                </div>\\n\\n                                <div class=\\\"form-row\\\">\\n                                    <div class=\\\"form-group col-md-4\\\">\\n                                        <label for=\\\"centerCity\\\" class=\\\"required-item\\\">Center City</label>\\n                                        <select #centerCity=\\\"ngModel\\\" [class.is-invalid]=\\\"centerCity.invalid && centerCity.touched\\\" [(ngModel)]=\\\"studentRegData.centerCity\\\" name=\\\"centerCity\\\" id=\\\"centerCity\\\" class=\\\"form-control\\\" required>\\n                                            <!-- <option value=\\\"Select any one center city\\\">Select any one center city</option>\\n                                            <option value=\\\"Delhi\\\">Delhi</option>\\n                                            <option value=\\\"Agra\\\">Agra</option>\\n                                            <option value=\\\"Jaipur\\\">Jaipur</option>\\n                                            <option value=\\\"Indore\\\">Indore</option>\\n                                            <option value=\\\"Mumbai\\\">Mumbai</option> --> \\n                                            <ng-container *ngFor=\\\"let center of centers\\\">\\n                                                <option value={{center.centerAddress}}>{{center.centerAddress}}</option>\\n                                            </ng-container>\\n                                        </select>\\n                                        <div [class.d-none]=\\\"centerCity.valid || centerCity.untouched\\\" class=\\\"invalid-feedback\\\">Please select any one city</div>\\n                                    </div>\\n                                    <div class=\\\"form-group col-md-8\\\">\\n                                        <label for=\\\"centerName\\\" class=\\\"required-item\\\">Center Name</label>\\n                                        <select #centerName=\\\"ngModel\\\" [class.is-invalid]=\\\"centerName.invalid && centerName.touched\\\" [(ngModel)]=\\\"studentRegData.centerName\\\" name=\\\"centerName\\\" id=\\\"centerName\\\" class=\\\"form-control\\\" required>\\n                                            <!-- <option value=\\\"Select any one center name\\\">Select any one center name</option>\\n                                            <option value=\\\"st xavier college of science\\\">st xavier college of science</option>\\n                                            <option value=\\\"Modern college of computers\\\">Modern college of computers</option>\\n                                            <option value=\\\"Malwa institute of technology and science\\\">Malwa institute of technology and science</option>\\n                                            <option value=\\\"Christient eminent college\\\">Christient eminent college</option>\\n                                            <option value=\\\"Deli college\\\">Deli college</option> -->\\n                                            <ng-container *ngFor=\\\"let center of centers\\\">   \\n                                                <option *ngIf=\\\"center.availableSeats\\\" value={{center.centerName}}>  {{center.centerName}} <span>{{center.availableSeats}}</span></option>\\n                                            </ng-container>\\n                                        </select>\\n                                        <div [class.d-none]=\\\"centerName.valid || centerName.untouched\\\" class=\\\"invalid-feedback\\\">Please select any one center</div>\\n                                    </div>\\n                                </div>\\n\\n                                <!-- <h6 class=\\\"form-caption\\\">Documents</h6>\\n                                <hr>\\n\\n                                <div class=\\\"form-row\\\">\\n                                    \\n                                    <div class=\\\"form-group col-md-4\\\">\\n                                        <label for=\\\"photo\\\">Photo</label>\\n                                        <div class=\\\"custom-input-file\\\">\\n                                            <input [(ngModel)]=\\\"studentRegData.photo\\\" type=\\\"file\\\" name=\\\"photo\\\" id=\\\"photo\\\" class=\\\"form-control\\\" (change)='getFile($event)' />\\n                                        </div>\\n                                    </div>\\n                                    \\n                                </div> -->\\n\\n                                <div class=\\\"text-right\\\">\\n                                    <button type=\\\"submit\\\" [disabled]=\\\"studentRegData.invalid\\\" class=\\\"btn btn-info\\\">Save</button>\\n                                    <button (click)=\\\"nextPage()\\\" class=\\\"btn btn-secondary ml-2\\\">Next</button>\\n                                </div>\\n\\n                            </form>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>                \"","export default \"<div class=\\\"common-format\\\">\\n    <div class=\\\"page-wrapper mt-3 mb-3\\\">\\n        <div class=\\\"container\\\">\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-md-8 offset-md-2\\\">\\n                    <div class=\\\"card\\\">\\n                        <div class=\\\"card-header\\\">\\n                            <h4 class=\\\"card-title text-center\\\">Login</h4>\\n                        </div>\\n                        <div class=\\\"card-body\\\">\\n                            <form>\\n                                <div class=\\\"form-group\\\">\\n                                    <label class=\\\"moving-label\\\" for=\\\"email\\\">Email</label>\\n                                    <input [(ngModel)]=\\\"loginUserData.email\\\" type=\\\"email\\\" name=\\\"email\\\" id=\\\"email\\\" class=\\\"form-control\\\" required />\\n                                </div>\\n                                <div class=\\\"form-group\\\">\\n                                    <label class=\\\"moving-label\\\" for=\\\"password\\\">Password</label>\\n                                    <input [(ngModel)]=\\\"loginUserData.password\\\" type=\\\"password\\\" name=\\\"password\\\" id=\\\"password\\\" class=\\\"form-control\\\" required />\\n                                </div>\\n                                <div class=\\\"text-right\\\">\\n                                    <button (click)=\\\"loginUser()\\\" class=\\\"btn btn-success\\\">Login</button>\\n                                </div>\\n                            </form>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"","export default \"<p>page-not-found works!</p>\\n\"","export default \"<div class=\\\"common-format\\\">\\n    <div class=\\\"page-wrapper mt-3 mb-3\\\">\\n        <div class=\\\"container\\\">\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-md-10 offset-md-1\\\">\\n                    <div class=\\\"card\\\">\\n                        <div class=\\\"card-header\\\">\\n                            <h4 class=\\\"card-title text-center\\\">Application Preview</h4>\\n                        </div>\\n                        <div class=\\\"card-body\\\">\\n                            <div class=\\\"text-right\\\" id=\\\"photo\\\">\\n                               \\n                            </div>\\n                            <!-- <form action=\\\"\\\" #studentRegData=\\\"ngForm\\\" (ngSubmit)=\\\"studentRegistration()\\\" novalidate> -->\\n                                <h6 class=\\\"form-caption\\\">Personal Information</h6>\\n                                <hr>\\n                                <div class=\\\"form-row\\\">\\n                                    <div class=\\\"form-group col-md-4\\\">\\n                                        <label for=\\\"fname\\\" class=\\\"required-item\\\">First Name</label>\\n                                        <p>{{studentData.fname}}</p>\\n                                    </div>\\n                                    <div class=\\\"form-group col-md-4\\\">\\n                                        <label for=\\\"mname\\\">Middle Name</label>\\n                                        <p>{{studentData.mname}}</p>\\n                                    </div>\\n                                    <div class=\\\"form-group col-md-4\\\">\\n                                        <label for=\\\"lname\\\" class=\\\"required-item\\\">Last Name</label>\\n                                        <p>{{studentData.lname}}</p>\\n                                    </div>\\n                                </div>\\n\\n                                <div class=\\\"form-row\\\">\\n                                    <div class=\\\"form-group col-md-4\\\">\\n                                        <label for=\\\"fathersName\\\" class=\\\"required-item\\\">Father's Name</label>\\n                                        <p>{{studentData.fathersName}}</p>\\n                                    </div>\\n                                    <div class=\\\"form-group col-md-4\\\">\\n                                        <label for=\\\"mothersName\\\" class=\\\"required-item\\\">Mother's Name</label>\\n                                        <p>{{studentData.mothersName}}</p>\\n                                    </div>\\n                                    <div class=\\\"form-group col-md-4\\\">\\n                                        <label for=\\\"dob\\\" class=\\\"required-item\\\">Date Of Birth</label>\\n                                        <p>{{studentData.dob}}</p>\\n                                    </div>\\n                                </div>\\n\\n                                <div class=\\\"form-row\\\">\\n                                    <div class=\\\"form-group col-md-4\\\">\\n                                        <label for=\\\"gender\\\">Gender</label>\\n                                        <p>{{studentData.gender}}</p>\\n                                    </div>\\n                                    <div class=\\\"form-group col-md-4\\\">\\n                                        <label for=\\\"nationality\\\" class=\\\"required-item\\\">Nationality</label>\\n                                        <p>{{studentData.nationality}}</p>\\n                                    </div>\\n                                    <div class=\\\"form-group col-md-4\\\">\\n                                        <label for=\\\"caste\\\" class=\\\"required-item\\\">Caste</label>\\n                                        <p>{{studentData.caste}}</p>\\n                                    </div>\\n                                </div>\\n\\n                                <div class=\\\"form-row\\\">\\n                                    <div class=\\\"form-group col-md-12\\\">\\n                                        <label for=\\\"address\\\" class=\\\"required-item\\\">Address</label>\\n                                        <p>{{studentData.address}}</p>\\n                                    </div>\\n                                </div>\\n\\n                                <div class=\\\"form-row\\\">\\n                                    <div class=\\\"form-group col-md-4\\\">\\n                                        <label for=\\\"city\\\" class=\\\"required-item\\\">City</label>\\n                                        <p>{{studentData.city}}</p>\\n                                    </div>\\n                                    <div class=\\\"form-group col-md-4\\\">\\n                                        <label for=\\\"state\\\" class=\\\"required-item\\\">State</label>\\n                                        <p>{{studentData.state}}</p>\\n                                    </div>\\n                                    <div class=\\\"form-group col-md-4\\\">\\n                                        <label for=\\\"country\\\" class=\\\"required-item\\\">Country</label>\\n                                        <p>{{studentData.country}}</p>\\n                                    </div>\\n                                </div>\\n\\n\\n                                <h6 class=\\\"form-caption\\\">Academic Information</h6>\\n                                <hr>\\n                                \\n                                <table class=\\\"table\\\">\\n                                    <thead>\\n                                        <tr>\\n                                            <th>Examination</th>\\n                                            <th>Board/University</th>\\n                                            <th>Subject</th>\\n                                            <th>Year</th>\\n                                            <th>Percentage/Grade</th>\\n                                        </tr>\\n                                    </thead>\\n                                    <tbody>\\n                                        <tr>\\n                                            <td>\\n                                                <div class=\\\"form-group\\\">\\n                                                    <label for=\\\"\\\">Senior Secondary</label>\\n                                                    <p>{{studentData.ssExamination}}</p>\\n                                                </div>\\n                                            </td>\\n                                            <td>\\n                                                <div class=\\\"form-group\\\">\\n                                                    <!-- <input #ssBoard=\\\"ngModel\\\" [class.is-invalid]=\\\"ssBoard.invalid && ssBoard.touched\\\" [(ngModel)]=\\\"studentRegData.ssBoard\\\" type=\\\"text\\\" name=\\\"ss-board\\\" id=\\\"ss-board\\\" level=\\\"ss\\\" class=\\\"form-control\\\" required/> -->\\n                                                    <p>{{studentData.ssBoard}}</p>\\n                                                </div>\\n                                            </td>\\n                                            <td>\\n                                                <div class=\\\"form-group\\\">\\n                                                    <!-- <input #ssSubject=\\\"ngModel\\\" [class.is-invalid]=\\\"ssSubject.invalid && ssSubject.touched\\\" [(ngModel)]=\\\"studentRegData.ssSubject\\\" type=\\\"text\\\" name=\\\"ss-subject\\\" id=\\\"ss-subject\\\" level=\\\"ss\\\" class=\\\"form-control\\\" required/> -->\\n                                                    <p>{{studentData.ssSubject}}</p>\\n                                                </div>\\n                                            </td>\\n                                            <td>\\n                                                <div class=\\\"form-group\\\">\\n                                                    <!-- <input #ssYear=\\\"ngModel\\\" [class.is-invalid]=\\\"ssYear.invalid && ssYear.touched\\\" [(ngModel)]=\\\"studentRegData.ssYear\\\" type=\\\"text\\\" name=\\\"ss-year\\\" id=\\\"ss-year\\\" level=\\\"ss\\\" class=\\\"form-control\\\" required/> -->\\n                                                    <p>{{studentData.ssYear}}</p>\\n                                                </div>\\n                                            </td>\\n                                            <td>\\n                                                <div class=\\\"form-group\\\">\\n                                                    <!-- <input #ssPercentage=\\\"ngModel\\\" [class.is-invalid]=\\\"ssPercentage.invalid && ssPercentage.touched\\\" [(ngModel)]=\\\"studentRegData.ssPercentage\\\" type=\\\"text\\\" name=\\\"ss-percentage\\\" id=\\\"ss-percentage\\\" level=\\\"ss\\\" class=\\\"form-control\\\" required/> -->\\n                                                    <p>{{studentData.ssPercentage}}</p>\\n                                                </div>\\n                                            </td>\\n                                        </tr>\\n                                        <tr>\\n                                            <td>\\n                                                <div class=\\\"form-group\\\">\\n                                                    <label for=\\\"\\\">Higher Secondary</label>\\n                                                    <!-- <input [(ngModel)]=\\\"studentRegData.hsExamination\\\" type=\\\"text\\\" name=\\\"hs-examination\\\" id=\\\"hs-examination\\\" class=\\\"form-control\\\" level=\\\"hs\\\" value=\\\"Higher Secondary\\\" /> -->\\n                                                    <p>{{studentData.hsExamination}}</p>\\n                                                </div>\\n                                            </td>\\n                                            <td>\\n                                                <div class=\\\"form-group\\\">\\n                                                    <!-- <input #hsBoard=\\\"ngModel\\\" [class.is-invalid]=\\\"hsBoard.invalid && hsBoard.touched\\\" [(ngModel)]=\\\"studentRegData.hsBoard\\\" type=\\\"text\\\" name=\\\"hs-board\\\" id=\\\"hs-board\\\" level=\\\"hs\\\" class=\\\"form-control\\\" required/> -->\\n                                                    <p>{{studentData.hsBoard}}</p>\\n                                                </div>\\n                                            </td>\\n                                            <td>\\n                                                <div class=\\\"form-group\\\">\\n                                                    <!-- <input #hsSubject=\\\"ngModel\\\" [class.is-invalid]=\\\"hsSubject.invalid && hsSubject.touched\\\" [(ngModel)]=\\\"studentRegData.hsSubject\\\" type=\\\"text\\\" name=\\\"hs-subject\\\" id=\\\"hs-subject\\\" level=\\\"hs\\\" class=\\\"form-control\\\" required/> -->\\n                                                    <p>{{studentData.hsSubject}}</p>\\n                                                </div>\\n                                            </td>\\n                                            <td>\\n                                                <div class=\\\"form-group\\\">\\n                                                    <!-- <input #hsYear=\\\"ngModel\\\" [class.is-invalid]=\\\"hsYear.invalid && hsYear.touched\\\" [(ngModel)]=\\\"studentRegData.hsYear\\\" type=\\\"text\\\" name=\\\"hs-year\\\" id=\\\"hs-year\\\" level=\\\"hs\\\" class=\\\"form-control\\\" required/> -->\\n                                                    <p>{{studentData.hsYear}}</p>\\n                                                </div>\\n                                            </td>\\n                                            <td>\\n                                                <div class=\\\"form-group\\\">\\n                                                    <!-- <input #hsPercentage=\\\"ngModel\\\" [class.is-invalid]=\\\"hsPercentage.invalid && hsPercentage.touched\\\" [(ngModel)]=\\\"studentRegData.hsPercentage\\\" type=\\\"text\\\" name=\\\"hs-percentage\\\" id=\\\"hs-percentage\\\" level=\\\"hs\\\" class=\\\"form-control\\\" required/> -->\\n                                                    <p>{{studentData.hsPercentage}}</p>\\n                                                </div>\\n                                            </td>\\n                                        </tr>\\n                                    </tbody>\\n                                </table>\\n\\n                                <div class=\\\"form-row\\\">\\n                                    <div class=\\\"form-group col-md-4\\\">\\n                                        <label for=\\\"applyFor\\\" class=\\\"required-item\\\">Apply For</label>\\n                                        <p>{{studentData.applyFor}}</p>\\n                                    </div>\\n\\n                                    <div class=\\\"form-group col-md-4\\\">\\n                                        <label for=\\\"stream\\\" class=\\\"required-item\\\">Stream</label>\\n                                        <p>{{studentData.stream}}</p>\\n                                    </div>\\n\\n                                    <div class=\\\"form-group col-md-4\\\">\\n                                        <label for=\\\"medium\\\" class=\\\"required-item\\\">Medium</label>\\n                                        <p>{{studentData.medium}}</p>\\n                                    </div>\\n                                </div>\\n\\n                                <div class=\\\"form-row\\\">\\n                                    <div class=\\\"form-group col-md-4\\\">\\n                                        <label for=\\\"centerCity\\\" class=\\\"required-item\\\">Center City</label>\\n                                        <p>{{studentData.centerCity}}</p>\\n                                    </div>\\n                                    <div class=\\\"form-group col-md-8\\\">\\n                                        <label for=\\\"centerName\\\" class=\\\"required-item\\\">Center Name</label>\\n                                        <p>{{studentData.centerName}}</p>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"text-right\\\" id=\\\"signature\\\">\\n                                    \\n                                </div>\\n                                <div class=\\\"text-right\\\">\\n                                    <!-- <button type=\\\"submit\\\" [disabled]=\\\"studentRegData.invalid\\\" class=\\\"btn btn-info\\\">Save</button>\\n                                    <button (click)=\\\"nextPage()\\\" class=\\\"btn btn-secondary ml-2\\\">Next</button> -->\\n                                    <button class=\\\"btn btn-primary\\\" (click)=\\\"print()\\\">Print</button>\\n                                </div>\\n\\n                            <!-- </form> -->\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>                \"","export default \"<div class=\\\"common-format\\\">\\n    <div class=\\\"page-wrapper mt-3 mb-3\\\">\\n        <div class=\\\"container\\\">\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-md-12\\\">\\n                    <div class=\\\"header\\\">\\n                        <h1 class=\\\"header_title\\\">Welcome to {{title}}</h1>\\n                        <p class=\\\"header_description\\\">Enroll yourself here for further process</p>\\n                    </div>\\n                    \\n                </div>\\n                <div class=\\\"col-md-8 offset-md-2\\\">\\n                    <div class=\\\"card\\\">\\n                        <div class=\\\"card-header\\\">\\n                            <h4 class=\\\"card-title text-center\\\">Registration</h4>\\n                        </div>\\n                        <div class=\\\"card-body\\\">\\n                            <form #registrationForm=\\\"ngForm\\\">\\n                                <div class=\\\"form-group\\\">\\n                                    <label class=\\\"moving-label\\\" for=\\\"name\\\">Name</label>\\n                                    <input [(ngModel)]=\\\"registeredUserData.name\\\" type=\\\"text\\\" name=\\\"name\\\" id=\\\"name\\\" class=\\\"form-control\\\" required />\\n                                </div>\\n                                <div class=\\\"form-group\\\">\\n                                    <label class=\\\"moving-label\\\" for=\\\"dob\\\">Date of birth</label>\\n                                    <input [(ngModel)]=\\\"registeredUserData.dob\\\" type=\\\"date\\\" name=\\\"dob\\\" id=\\\"dob\\\" class=\\\"form-control\\\" required />\\n                                </div>\\n                                <div class=\\\"form-group\\\">\\n                                    <label class=\\\"moving-label\\\" for=\\\"email\\\">Email</label>\\n                                    <input [(ngModel)]=\\\"registeredUserData.email\\\" type=\\\"email\\\" name=\\\"email\\\" id=\\\"email\\\" class=\\\"form-control\\\" required />\\n                                </div>\\n                                <div class=\\\"form-group\\\">\\n                                    <label class=\\\"moving-label\\\" for=\\\"contact\\\">Contact</label>\\n                                    <input [(ngModel)]=\\\"registeredUserData.contact\\\" type=\\\"tel\\\" name=\\\"contact\\\" id=\\\"contact\\\" class=\\\"form-control\\\" required />\\n                                </div>\\n                                <div class=\\\"form-group\\\">\\n                                    <label class=\\\"moving-label\\\" for=\\\"password\\\">Password</label>\\n                                    <input [(ngModel)]=\\\"registeredUserData.password\\\" type=\\\"password\\\" name=\\\"password\\\" id=\\\"password\\\" class=\\\"form-control\\\" required />\\n                                </div>\\n                                <div class=\\\"form-group\\\">\\n                                    <label class=\\\"moving-label\\\" for=\\\"cpass\\\">Confirm Password</label>\\n                                    <input [(ngModel)]=\\\"registeredUserData.cpass\\\" type=\\\"password\\\" name=\\\"cpass\\\" id=\\\"cpass\\\" class=\\\"form-control\\\" required />\\n                                </div>\\n                                <div class=\\\"text-right\\\">\\n                                    <button (click)=\\\"registerUser()\\\" class=\\\"btn btn-primary\\\">Register</button>\\n                                </div>\\n                            </form>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { NgModule, Component } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\nimport { RegisterComponent } from './register/register.component';\nimport { LoginComponent } from './login/login.component';\nimport { HomeComponent } from './home/home.component';\nimport { AuthGuard } from './auth.guard';\nimport { FileUploadComponent } from './file-upload/file-upload.component';\nimport { PreviewComponent } from './preview/preview.component';\n\n\nconst routes: Routes = [\n  { path: '', redirectTo: '/register', pathMatch: 'full' },\n  { path: 'register', component: RegisterComponent },\n  { path: 'login', component: LoginComponent },\n  { path: 'home', component: HomeComponent, canActivate: [AuthGuard] },\n  { path: 'file-upload', component: FileUploadComponent },\n  { path: 'preview', component: PreviewComponent },\n  { path: '**', component: PageNotFoundComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\nexport const routingComponent = [RegisterComponent, PageNotFoundComponent, LoginComponent, HomeComponent];\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'frontend';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { AppRoutingModule, routingComponent } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HeaderComponent } from './header/header.component';\nimport { FooterComponent } from './footer/footer.component';\nimport { AuthService } from './auth.service';\nimport { StudentRegistrationService } from './student-registration.service';\nimport { AuthGuard } from './auth.guard';\nimport { TokenInterceptorService } from './token-interceptor.service';\nimport { FileUploadComponent } from './file-upload/file-upload.component';\nimport { PreviewComponent } from './preview/preview.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    FooterComponent,\n    routingComponent,\n    FileUploadComponent,\n    PreviewComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [AuthService, StudentRegistrationService, AuthGuard,\n  {\n    provide: HTTP_INTERCEPTORS,\n    useClass: TokenInterceptorService,\n    multi: true\n  }],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { CanActivate, CanActivateChild, CanLoad, Route, UrlSegment, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { AuthService } from './auth.service';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(private _authService: AuthService,\n              private _router: Router){}\n\n   canActivate() : boolean{\n     if(this._authService.loggedIn()){\n       return true\n     } else {\n       this._router.navigate(['/login'])\n       return false\n     }\n   }           \n  \n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  private registerUrl = 'https://eems-heroku.herokuapp.com/register';\n  private loginUrl = 'https://eems-heroku.herokuapp.com/login';\n  constructor(private _http : HttpClient, private _router : Router) { }\n\n  register(user): Observable<any>{\n    return this._http.post<any>(this.registerUrl, user);\n  }\n\n  login(user): Observable<any>{\n    return this._http.post(this.loginUrl, user);\n  }\n\n  loggedIn(){\n    return !!localStorage.getItem('token')\n  }\n\n  logoutUser(){\n    localStorage.removeItem('token')\n    this._router.navigate(['/login'])\n  }\n\n  getToken(){\n    return localStorage.getItem('token');\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { FilesInfo } from './filesInfo';\n\nimport { StudentInfo } from './studentInfo';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataShareService {\n\n  private stuData = new BehaviorSubject(new StudentInfo());\n  private upldData = new BehaviorSubject(new FilesInfo());\n\n  currStudData = this.stuData.asObservable();\n  currUpldData = this.upldData.asObservable();\n\n  constructor() { }\n\n  changeStudData(studentData) {\n    this.stuData.next(studentData);\n  }\n\n  changeUpldData(uploadedData) {\n    this.upldData.next(uploadedData);\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2ZpbGUtdXBsb2FkL2ZpbGUtdXBsb2FkLmNvbXBvbmVudC5zY3NzIn0= */\"","import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { DataShareService } from '../data-share.service';\n\n@Component({\n  selector: 'app-file-upload',\n  templateUrl: './file-upload.component.html',\n  styleUrls: ['./file-upload.component.scss']\n})\nexport class FileUploadComponent implements OnInit {\n\n  constructor(private _http: HttpClient, private _route: Router, private _sharedData: DataShareService) { }\n\n  ngOnInit() {\n    this._sharedData.currUpldData.subscribe(files => this.fileUpload = files)\n  }\n\n  files: any = [];\n\n  fileUpload: any = {}\n\n  // fileReq = ['marksheet', 'photo', 'signature'];\n\n  selectedFile: File = null\n\n  prevPage() {\n    this._route.navigate(['/home']);\n  }\n\n  getFile(event) {\n    this.selectedFile = <File>event.target.files[0];\n    const input = event.target;\n    const inputName = document.createElement('span');\n    inputName.className = 'file-name';\n    inputName.textContent = this.selectedFile.name;\n    input.parentNode.append(inputName);\n    console.log(this.selectedFile);\n    console.log(this.selectedFile.name);\n    this.selectedFile['finalName'] = event.target.name;\n    this.files.push(this.selectedFile);\n    console.log(this.files)\n  }\n\n  uploadFile() {\n    console.log('uploads', this.files);\n    this._sharedData.changeUpldData(this.files);\n    for(const file of this.files) {\n      const fd = new FormData();\n      fd.append('file' , file);\n      this._http.post('https://eems-heroku.herokuapp.com/file-upload', fd)\n      .subscribe(\n        res => { console.log(res) },\n        err => { console.log(err) }\n      )\n    }\n    this._route.navigate(['/preview']);\n  }\n\n}\n","export class FilesInfo {\r\n    marksheet: Blob;\r\n    photo: Blob;\r\n    signature: Blob;\r\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Zvb3Rlci9mb290ZXIuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hlYWRlci9oZWFkZXIuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../auth.service';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor(private _authService: AuthService) { }\n\n  ngOnInit() {\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hvbWUvaG9tZS5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { StudentRegistrationService } from '../student-registration.service';\nimport { Center } from '../center';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { DataShareService } from '../data-share.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n\n  \n  studentRegData = {\n    fname: \"\",\n    mname: \"\",\n    lname: \"\",\n    fathersName: \"\",\n    mothersName: \"\",\n    dob: \"\",\n    gender: \"\",\n    nationality: \"\",\n    caste: \"\",\n    address: \"\",\n    city: \"\",\n    state: \"\",\n    country: \"\",\n    ssExamination: \"\",\n    ssBoard: \"\",\n    ssSubject: \"\",\n    ssYear: \"\",\n    ssPercentage: \"\",\n    hsExamination: \"\",\n    hsBoard: \"\",\n    hsSubject: \"\",\n    hsYear: \"\",\n    hsPercentage: \"\",\n    applyFor: \"\",\n    stream: \"\",\n    medium: \"\",\n    centerCity: \"\",\n    centerName: \"\"\n  }\n\n  uploadedFiles: any = {}\n\n  studentInfo: any = [];\n\n  centers: any = []\n\n  constructor(private _studentRegService: StudentRegistrationService, private _http: HttpClient, private _route: Router, private _sharedData: DataShareService) { }\n\n  ngOnInit() {\n    this.getCenter();\n    console.log(this.centers);\n    // this._sharedData.changeStudData.subscribe(stuData => this.studentRegData = stuData);\n    this._sharedData.currStudData.subscribe(stuData => this.studentInfo = stuData);\n    this._sharedData.currUpldData.subscribe(files => this.uploadedFiles = files);\n  }\n\n  selectedFile: File = null\n\n  nextPage() {\n    if (confirm('Have you save the data?')) {\n      this._route.navigate(['/file-upload']);\n    } else {\n      return;\n    }\n  }\n\n  getFile(event) {\n    this.selectedFile = <File>event.target.files[0];\n    console.log(this.selectedFile);\n    console.log(this.selectedFile.name);\n  }\n\n  studentRegistration() {\n    console.log(this.studentRegData);\n    // const fd = new FormData();\n    // fd.append('file', this.selectedFile, this.selectedFile.name)\n    // this._http.post('http://localhost:3000/fileUpload', fd)\n    // .subscribe(\n    //   res => { console.log(res) },\n    //   err => { console.log(err) }\n    // )\n\n    this._sharedData.changeStudData(this.studentRegData)\n    \n    this._studentRegService.studentReg(this.studentRegData)\n      .subscribe(\n        (err) => console.log(err),\n        (res) => {\n          console.log(res);\n          alert('Your data has been submitted sucessfully');\n        }\n                \n      )\n  }\n \n  getCenter(){\n    this._studentRegService.getCenterData()\n    .subscribe(\n      res => { this.centers = res as Center[];\n                  console.log(res); \n                },\n      err => { console.log(err)}          \n    )\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  loginUserData = {\n    email: \"\",\n    password: \"\"\n  }\n\n  constructor(private _auth: AuthService, private _router: Router) { }\n\n  ngOnInit() {\n  }\n\n  loginUser(){\n    this._auth.login(this.loginUserData)\n    .subscribe(\n      res => { \n              localStorage.setItem('token', res.token);\n              console.log(res) \n            this._router.navigate(['/home']) },\n      err => { console.log(err) }\n    )\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2Utbm90LWZvdW5kL3BhZ2Utbm90LWZvdW5kLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.scss']\n})\nexport class PageNotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ByZXZpZXcvcHJldmlldy5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { DataShareService } from '../data-share.service';\n\n@Component({\n  selector: 'app-preview',\n  templateUrl: './preview.component.html',\n  styleUrls: ['./preview.component.scss']\n})\nexport class PreviewComponent implements OnInit {\n\n  constructor(private _sharedData: DataShareService) { }\n\n  studentData;\n  uploadedFiles;\n\n \n\n  ngOnInit() {\n    // this._sharedData.changeStudData.subscribe(studData => this.studentData);\n    this._sharedData.currStudData.subscribe(stuData => this.studentData = stuData);\n    console.log(this.studentData);\n    this._sharedData.currUpldData.subscribe(files => this.uploadedFiles = files);\n    console.log(this.uploadedFiles);\n  }\n\n  ngAfterViewInit(): void {\n    //Called after ngAfterContentInit when the component's view has been initialized. Applies to components only.\n    //Add 'implements AfterViewInit' to the class.\n    // const photoUrl = URL.createObjectURL(this.uploadedFiles[1]);\n    // const signUrl = URL.createObjectURL(this.uploadedFiles[2]);\n    for(const file of this.uploadedFiles) {\n      let reader = new FileReader();\n      reader.onload = (function(theFile) {\n        return function(e) {\n          const span = document.createElement('span');\n          span.innerHTML = `<img src=\"${e.target.result}\" alt=\"uploaded-image\" width=\"124px\">`;\n          if(file.finalName === 'photo') {\n            document.getElementById('photo').appendChild(span);\n          } else if (file.finalName === 'signature') {\n            document.getElementById('signature').appendChild(span);\n          }\n        }\n       })(file);\n       reader.readAsDataURL(file)\n    }\n  }\n\n  print() {\n    window.print();\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JlZ2lzdGVyL3JlZ2lzdGVyLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../auth.service';\nimport { Observable } from 'rxjs';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent implements OnInit {\n\n  title = \"EEMS\";\n\n  registeredUserData = {\n    name: \"\",\n    dob: \"\",\n    email: \"\",\n    contact: \"\",\n    password: \"\",\n    cpass: \"\"\n   };\n\n  constructor(private _auth: AuthService, private _router: Router) { }\n\n  ngOnInit() {\n  }\n\n  registerUser(){\n    this._auth.register(this.registeredUserData)\n    .subscribe(\n      res => {\n        localStorage.setItem('token', res.token);\n        console.log(res);\n        this._router.navigate(['/home']);\n        this.registeredUserData = {\n          name: \"\",\n          dob: \"\",\n          email: \"\",\n          contact: \"\",\n          password: \"\",\n          cpass: \"\"\n         };},\n      err => {console.log(err)}\n    )\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StudentRegistrationService {\n\n  private studentRegUrl = \"https://eems-heroku.herokuapp.com/home\";\n  private centerUrl = \"https://eems-heroku.herokuapp.com/center\";\n\n  constructor(private _http: HttpClient) { }\n\n  studentReg(student): Observable<any>{\n    return this._http.post(this.studentRegUrl, student);\n  }\n\n  getCenterData(){\n    return this._http.get(this.centerUrl);\n  }\n}\n","export class StudentInfo {\r\n    fname: String;\r\n    mname: String;\r\n    lname: String;\r\n    fathersName: String;\r\n    mothersName: String;\r\n    dob: String;\r\n    gender: String;\r\n    nationality: String;\r\n    caste: String;\r\n    address: String;\r\n    city: String;\r\n    state: String;\r\n    country: String;\r\n    ssExamination: String;\r\n    ssBoard: String;\r\n    ssSubject: String;\r\n    ssYear: String;\r\n    ssPercentage: String;\r\n    hsExamination: String;\r\n    hsBoard: String;\r\n    hsSubject: String;\r\n    hsYear: String;\r\n    hsPercentage: String;\r\n    applyFor: String;\r\n    stream: String;\r\n    medium: String;\r\n    centerCity: String;\r\n    centerName: String;\r\n}","import { Injectable, Injector } from '@angular/core';\nimport { HttpInterceptor } from '@angular/common/http';\nimport { AuthService } from './auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TokenInterceptorService implements HttpInterceptor {\n\n  constructor(private injector: Injector) { }\n\n  intercept(req, next){\n    let authService = this.injector.get(AuthService)\n    let tokenizedReq = req.clone({\n      setHeaders:{\n        Authorization: `Bearer ${authService.getToken()}`\n      }\n    })\n    return next.handle(tokenizedReq)\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}